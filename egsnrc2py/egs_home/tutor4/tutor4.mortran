%C80
"#############################################################################"
"                                                                             "
"  EGSnrc tutor4 application                                                  "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Dave Roger, 2000                                          "
"                                                                             "
"  Contributors:    Iwan Kawrakow                                             "
"                   Reid Townson                                              "
"                                                                             "
"#############################################################################"
"                                                                             "
"  An EGSnrc user code which calculates the total amount of energy reflected, "
"  deposited and transmitted when a 20 MeV beam of electrons is incident on a "
"  1 mm slab of tantalum. It is the same as tutor2.mortran but it has the     "
"  watch routine turned on for the first 10 histories.                        "
"                                                                             "
"  Note that the WATCH routine is included via the standard configuration     "
"  file as part of nrcaux.mortran. To output a file for EGS_windows you will  "
"  need to link fort.13 to the files name in an environment file.             "
"                                                                             "
"  Iwan Kawrakow, 2003: Adapted to new EGSnrc MP system by adding call        "
"  egs_init at the beginning and call egs_finish at the end.                  "
"                                                                             "
"#############################################################################"
REPLACE {$MXMED} WITH {1}   "only 1 medium in the problem(default 10)"
REPLACE {$MXREG} WITH {3}   "only 3 geometric regions (default 2000)"
REPLACE {$MXSTACK} WITH {15}"less than 15 particles on stack at once"

"Define a common to pass information to the geometry routine HOWFAR"
REPLACE {;COMIN/GEOM/;} WITH {;COMMON/GEOM/ZBOUND;$REAL ZBOUND;}
REPLACE {$CALL-HOWNEAR(#);} WITH {
   ;CALL HOWNEAR({P1},X(NP),Y(NP),Z(NP),IRL);}
"Define a COMMON for scoring in AUSGAB"
REPLACE {;COMIN/SCORE/;} WITH {
   ;COMMON/SCORE/ESCORE(3),IWATCH; $INTEGER IWATCH; REAL*8 ESCORE;
}
;COMIN/BOUNDS,GEOM,MEDIA,MISC,SCORE,STACK,THRESH,USEFUL/;"NOTE ; BEFORE COMIN"
"       The above expands into a series of COMMON statements"
"       BOUNDS contains ECUT and PCUT"
"       GEOM passes info to our HOWFAR routine"
"       MEDIA contains the array MEDIA"
"       MISC contains MED"
"       SCORE contains the scoring array ESCORE and IWATCH"
"       STACK to provide LATCHI"
"       THRESH contains various thresholds"
"       USEFUL contains PRM"

%L
!INDENT M 4;    "indent each MORTRAN nesting level by 4"
!INDENT F 2;    "indent each FORTRAN nesting level by 2"

"********************************************************************"
"                                                                    "
SUBROUTINE AUSGAB(IARG);
"                                                                    "
" In this AUSGAB routine for tutor4, we score the energy deposited   "
"  in the various regions. This amounts to the total energy          "
"  reflected,deposited and transmitted by the slab.                  "
"                                                                    "
"  For IARG=0, an electron or photon step is about to occur and we   "
"  score the energy deposited, if any. Note that only electrons      "
"  deposit energy during a step, and due to our geometry, electrons  "
"  only take steps in region 2 - however there is no need to check.  "
"  For IARG=1,2 and 4, particles have been discarded for falling     "
"  below various energy cutoffs and all their energy is deposited    "
"  locally (in fact EDEP = particles kinetic energy).                "
"  For IARG=3, we are discarding the particle since it is in         "
"  region 1 or 3, so score its energy.                               "
"                                                                    "
"********************************************************************"
$IMPLICIT-NONE;
$INTEGER IARG,IRL;

COMIN/EPCONT,SCORE,STACK/; "we use EDEP from EPCONT,IR(NP) from STACK"
"                        ESCORE is passed in user defined COMIN SCORE"

IF (IWATCH > 0 ) CALL WATCH(IARG,IWATCH); "handles printouts of data"
                                          "IWATCH is passed in SCORE"

IF(IARG <= 4) [
   IRL = IR(NP);" pick up current region number"
   ESCORE(IRL)=ESCORE(IRL)+EDEP;
]
RETURN;END;"end of ausgab"

%E  "tutor4.mortran"

%E  "tutor4.mortran"
"*********************************************************************"
"                                                                     "
SUBROUTINE HOWNEAR(tperp, x, y, z, irl);
"                                                                     "
" The following is a general specification of HOWNEAR                 "
"   Given a particle at (x,y,z) in region irl, HOWNEAR answers the    "
"   question, What is the distance to the closest boundary?           "
"                                                                     "
"  In general this can be a complex subroutine.                       "
"  Note that this subroutine must be linked to $CALL-HOWNEAR(#)       "
"                                                                     "
"*********************************************************************"
$IMPLICIT-NONE;
$REAL tperp, x,y,z;
$INTEGER irl;

;COMIN/GEOM/; "       COMMON GEOM contains ZBOUND"

IF(irl = 3) [OUTPUT;('Called HOWNEAR in region 3'); RETURN;]

ELSEIF(irl = 2)["We are in the Ta plate - check the geometry"
    tperp = min(z, (ZBOUND - z) );
]

ELSEIF(irl = 1)[OUTPUT;('Called HOWNEAR in region 1'); RETURN;]

END;"end of subroutine hownear"
